<?xml version="1.0" encoding="utf-8"?>
<root>
    <!-- 
      Microsoft ResX Schema 
      
      Version 2.0
      
      The primary goals of this format is to allow a simple XML format 
      that is mostly human readable. The generation and parsing of the 
      various data types are done through the TypeConverter classes 
      associated with the data types.
      
      Example:
      
      ... ado.net/XML headers & schema ...
      <resheader name="resmimetype">text/microsoft-resx</resheader>
      <resheader name="version">2.0</resheader>
      <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
      <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
      <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
      <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
      <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
          <value>[base64 mime encoded serialized .NET Framework object]</value>
      </data>
      <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
          <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
          <comment>This is a comment</comment>
      </data>
                  
      There are any number of "resheader" rows that contain simple 
      name/value pairs.
      
      Each data row contains a name, and value. The row also contains a 
      type or mimetype. Type corresponds to a .NET class that support 
      text/value conversion through the TypeConverter architecture. 
      Classes that don't support this are serialized and stored with the 
      mimetype set.
      
      The mimetype is used for serialized objects, and tells the 
      ResXResourceReader how to depersist the object. This is currently not 
      extensible. For a given mimetype the value must be set accordingly:
      
      Note - application/x-microsoft.net.object.binary.base64 is the format 
      that the ResXResourceWriter will generate, however the reader can 
      read any of the formats listed below.
      
      mimetype: application/x-microsoft.net.object.binary.base64
      value   : The object must be serialized with 
              : System.Serialization.Formatters.Binary.BinaryFormatter
              : and then encoded with base64 encoding.
      
      mimetype: application/x-microsoft.net.object.soap.base64
      value   : The object must be serialized with 
              : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
              : and then encoded with base64 encoding.
  
      mimetype: application/x-microsoft.net.object.bytearray.base64
      value   : The object must be serialized into a byte array 
              : using a System.ComponentModel.TypeConverter
              : and then encoded with base64 encoding.
      -->
    <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"
                id="root"
                xmlns="">
        <xsd:element name="root" msdata:IsDataSet="true">
            <xsd:complexType>
                <xsd:choice maxOccurs="unbounded">
                    <xsd:element name="metadata">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string"/>
                            <xsd:attribute name="type" type="xsd:string"/>
                            <xsd:attribute name="mimetype" type="xsd:string"/>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="assembly">
                        <xsd:complexType>
                            <xsd:attribute name="alias" type="xsd:string"/>
                            <xsd:attribute name="name" type="xsd:string"/>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="data">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1"/>
                            <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
                            <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="resheader">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required"/>
                        </xsd:complexType>
                    </xsd:element>
                </xsd:choice>
            </xsd:complexType>
        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>2.0</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral,
            PublicKeyToken=b77a5c561934e089
        </value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral,
            PublicKeyToken=b77a5c561934e089
        </value>
    </resheader>
    <data name="usdPathNotConfiguredCaption" xml:space="preserve">
    <value>No UltraStar Directory</value>
  </data>
    <data name="usdPathNotConfiguredMessage" xml:space="preserve">
        <value>You have no UltraStar path configured at the moment.
Please select your UltraStar Deluxe directory in order to move on.</value>
    </data>
    <data name="usdPathNotValidCaption" xml:space="preserve">
        <value>UltraStar directory not valid</value>
    </data>
    <data name="usdPathNotValidMessage" xml:space="preserve">
        <value>The folder you selected isn't an UltraStar Directory.
Please select another one.</value>
    </data>
    <data name="songListInitializationDoneMessage" xml:space="preserve">
        <value>{0} valid UltraStar song(s) where found.</value>
    </data>
    <data name="songListInitializationDoneCaption" xml:space="preserve">
        <value>Songlist Initialization Done</value>
    </data>
    <data name="coverDownloadFromUrl" xml:space="preserve">
        <value>Download Cover Image from URL</value>
    </data>
    <data name="unsavedChangesMessage" xml:space="preserve">
        <value>You have unsaved changes. Do you want to save all changes before closing?</value>
    </data>
    <data name="unsavedChangesCaption" xml:space="preserve">
        <value>Unsaved Changes</value>
    </data>
    <data name="reloadSongsMessage" xml:space="preserve">
        <value>Are you sure that you want to reload all songs from the song directories? Unsaved changes will be lost.</value>
    </data>
    <data name="reloadSongsCaption" xml:space="preserve">
        <value>Reload Songs</value>
    </data>
    <data name="coverDownloadSuccessMessage" xml:space="preserve">
        <value>Cover successfully downloaded.</value>
    </data>
    <data name="successCaption" xml:space="preserve">
        <value>Success</value>
    </data>
    <data name="coverDownloadErrorMessage" xml:space="preserve">
        <value>Something went wrong while downloading the new cover image. Make sure that the URL leads to an image in JPG or PNG format.</value>
    </data>
    <data name="coverDownloadErrorCaption" xml:space="preserve">
        <value>Cover Download Error</value>
    </data>
    <data name="coverDownloadUrlInputMessage" xml:space="preserve">
        <value>Please enter the URL of the image you want to download as the new cover.</value>
    </data>
    <data name="urlInputCaption" xml:space="preserve">
        <value>Enter URL</value>
    </data>
    <data name="coverOverwriteMessage" xml:space="preserve">
        <value>Are you sure that you want to set a new cover image? This will delete the old one after saving.</value>
    </data>
    <data name="coverOverwriteCaption" xml:space="preserve">
        <value>Overwrite Cover</value>
    </data>
    <data name="coverDeleteMessage" xml:space="preserve">
        <value>Are you sure that you want to delete the cover image?
This will also delete the image file from your drive.</value>
    </data>
    <data name="fileDeleteCaption" xml:space="preserve">
        <value>Delete File</value>
    </data>
    <data name="fileDeleteErrorMessage" xml:space="preserve">
        <value>An error occured while deleting the file.</value>
    </data>
    <data name="fileDeleteErrorCaption" xml:space="preserve">
        <value>File Deletion Error</value>
    </data>
    <data name="reloadSongMessage" xml:space="preserve">
        <value>Are you sure that you want to reload the selected song?
Unsaved changes will be lost.</value>
    </data>
    <data name="reloadSongCaption" xml:space="preserve">
        <value>Reload Song</value>
    </data>
    <data name="reloadSongSuccessMessage" xml:space="preserve">
        <value>"{0}" was reloaded successfully.</value>
    </data>
    <data name="reloadSongErrorMessage" xml:space="preserve">
        <value>An unexpected error occured while reloading{0}!</value>
    </data>
    <data name="errorCaption" xml:space="preserve">
        <value>Error</value>
    </data>
    <data name="songListInitializationErrorsMessage" xml:space="preserve">
        <value>{0} invalid song(s) files where found.</value>
    </data>
    <data name="reloadSongFileNotFoundErrorMessage" xml:space="preserve">
        <value>The song couldn't be reloaded due to the file {0} not existing.</value>
    </data>
    <data name="mp3FileNotExistsWarningIcon" xml:space="preserve">
        <value>MP3 file doesn't exist</value>
    </data>
    <data name="videoFileNotExistsWarningIcon" xml:space="preserve">
        <value>Video file doesn't exist</value>
    </data>
    <data name="coverSelectFileCaption" xml:space="preserve">
        <value>Select Cover Image</value>
    </data>
    <data name="imageFileFilter" xml:space="preserve">
        <value>JPG or PNG|*.jpg;*.jpeg;*.png</value>
    </data>
    <data name="findUsdFolderDescription" xml:space="preserve">
        <value>Choose the folder of your UltraStar Deluxe installation.</value>
    </data>
    <data name="saveSongCaption" xml:space="preserve">
        <value>Save Song</value>
    </data>
    <data name="textFileFilter" xml:space="preserve">
        <value>Text File|*.txt</value>
    </data>
    <data name="exportSongSaveFirstMessage" xml:space="preserve">
        <value>You need to save the song before exporting it. Do you want to do this now?</value>
    </data>
    <data name="exportSongTitle" xml:space="preserve">
        <value>Choose export destination</value>
    </data>
    <data name="saveSongErrorMessage" xml:space="preserve">
        <value>An unexpected error occured while trying to save the song{0}.</value>
    </data>
    <data name="songNotPlayableCaption" xml:space="preserve">
        <value>Song not playable</value>
    </data>
    <data name="songNotPlayableMessage" xml:space="preserve">
        <value>The song you're trying to save is currently not playable. Are you sure that you want to save it?</value>
    </data>
    <data name="songsNotPlayableMessage" xml:space="preserve">
        <value>At least one of the songs you're trying to save is currently not playable. Are you sure that you want to save?</value>
    </data>
    <data name="titleMissingWarningIcon" xml:space="preserve">
        <value>Song title missing</value>
    </data>
    <data name="artistMissingWarningIcon" xml:space="preserve">
        <value>Artist missing</value>
    </data>
    <data name="mp3FileMissingWarningIcon" xml:space="preserve">
        <value>MP3 file missing</value>
    </data>
    <data name="player1TextMissingWarningIcon" xml:space="preserve">
        <value>Song text for player 1 missing</value>
    </data>
    <data name="player2TextMissingWarningIcon" xml:space="preserve">
        <value>Song text for player 2 missing</value>
    </data>
    <data name="mp3SelectFileCaption" xml:space="preserve">
        <value>Select MP3 File</value>
    </data>
    <data name="videoOverwriteMessage" xml:space="preserve">
        <value>Are you sure that you want to use a new video for this song? This will delete the old one after saving.</value>
    </data>
    <data name="mp3OverwriteMessage" xml:space="preserve">
        <value>Are you sure that you want to use a new MP3 file? This will delete the old one after saving.</value>
    </data>
    <data name="mp3OverwriteCaption" xml:space="preserve">
        <value>Overwrite MP3</value>
    </data>
    <data name="videoOverwriteCaption" xml:space="preserve">
        <value>Overwrite Video</value>
    </data>
    <data name="mp3DeleteMessage" xml:space="preserve">
        <value>Are you sure that you want to delete the MP3?
This will also delete the music file from your drive.</value>
    </data>
    <data name="videoDeleteMessage" xml:space="preserve">
        <value>Are you sure that you want to delete the video?
This will also delete the file from your drive.</value>
    </data>
    <data name="newSongTitleOrArtistMissingErrorMessage" xml:space="preserve">
        <value>You need to enter a song title as well as an artist.</value>
    </data>
    <data name="newSongSuccessMessage" xml:space="preserve">
        <value>The song "{0}" by "{1}" was created successfully.</value>
    </data>
    <data name="newSongErrorWhileCreationMessage" xml:space="preserve">
        <value>An unexpected error occured while trying to create the song "{0}" by "{1}" in the song directory "{2}".</value>
    </data>
</root>